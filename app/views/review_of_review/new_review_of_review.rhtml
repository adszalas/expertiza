<SCRIPT LANGUAGE="JavaScript">
function toggleVis(id) { 
		var elem = document.getElementById(id+"_myDiv");
		if(elem.style.display == 'none'){
			elem.style.display = '';
			document.getElementById(id+"_show").style.display = 'none';
			document.getElementById(id+"_hide").style.display = '';
		} else {
			elem.style.display = 'none';
			document.getElementById(id+"_show").style.display = '';
			document.getElementById(id+"_hide").style.display = 'none';
		}
	} 
</SCRIPT>

<h1>New Review of Review</h1>
<% if flash[:notice] != nil and flash[:notice].strip != "" %>
<div class="flash_error">
	<%= flash[:notice] %>
</div>
<% end %>
<%if @assgt.wiki_type.name == "No"%>
<%if @files.size == 0%>
<%else%>
Submitted Files<br />
<%end%>
<%end%>

<%
 _time = Time.now.month.to_s + "/" + Time.now.day.to_s + "/" + Time.now.year.to_s
 if @assgt.wiki_type.name == "DokuWiki" %>
<br>
<b>DokuWiki Review Links:</b>
<br>
<br>
<%= review_dokuwiki @assgt.directory_path, _time, @author_name  %>
<br>
<% elsif @assgt.wiki_type.name == "MediaWiki" %>
<br>
<b>MediaWiki Review Links:</b>
<br>
<br>
<!--The following checks a wiki type.  If we add a new wiki type, we need to modify this code, which is in
    a very unexpected place.  This should be done by polymorphism, based on a Wiki class that is subclassed
    for various kinds of wikis. 
    
    Make a generic review_wiki function, with a parameter specifying wiki type.  The review_wiki function
    then makes callbacks to the various wiki classes, depending on what kind of a wiki it is working on.
    This allows wiki-specific behavior to be kept in the wiki classes. -->
<%if @assgt.team_assignment  # The lookup of all team members should be put in a wiki helper
  	for team_member in @team_members
		member_name = User.find(team_member.user_id).name 
	%>
		<%= review_mediawiki_group @assgt.directory_path, _time, member_name  %>
	<%end%>
<%else%>
	<%= review_mediawiki @assgt.directory_path, _time, @author_name  %>
<%end%>
<br>
<% end %>
<ul>

<% for file in @files %>
<li><%= link_to File.basename(file), :action => 'edit_review', :id => @mapping_id, :fname => File.basename(file),"current_folder[name]" => @current_folder.name %></li>
<% end %>
</ul>
<%if @assgt.team_assignment %>
	<% for team_member in @team_members %>
	<label>
	<% submitted = Participant.find(:first, :conditions =>["user_id = ? and assignment_id = ?",team_member.user_id,@assgt.id]).submitted_hyperlink
	if submitted !=nil
	%>
	URL to file submission (if available):</label><%= submitted %>
	<br/>
	<% end%>
	<% end %>
<%else %>
	<% if @link != nil %>
		Hyperlink: <a href="<%= @link %>" target="new"><%= @link %></a><br/><br/>
	<% end %>	
<%end%>


<a href="#1" onClick="toggleVis('1');">
        <p class="inline" id="1_show" >View review</p>
        <p class="inline" id="1_hide" style="display: none;">Hide review</p>
</a>
<div id="1_myDiv" style="display: none;">
<strong>Reviewed <%= @review.review_num_for_author %> at <%= @review.updated_at.strftime('%A %B %d %Y, %I:%M%p') %></strong>
<%= render :partial => 'review/scores' %>
Additional Comment : <br><%=@review.additional_comment.gsub(/\n/, '<br>')%><br/>
<br/>
</div>


<%= start_form_tag :action => 'create_review_of_review' %>
<% i = 0;
for @question in @questions %>
  <%=@question.txt%><br />        
  <input id=new_review_score_<%=i%>_comments name=new_review_score[<%=i%>][comments] size=70 type=text />
  <% if @question.true_false? %>
      <select id=new_score_<%=i%> name=new_score[<%=i%>]>
         <option value="<%=@min%>"><%=@min%></option>
         <option value="<%=@max%>"><%=@max%></option>     
      </select><br />  
  <% else %>
      <select id=new_score_<%=i%> name=new_score[<%=i%>]>
          <% for j in @min..@max %>
            <option value="<%=j%>"><%=j%></option>
          <% end %>
      </select><br />  
  <% end %>
  <input id=new_question_<%=i%> name=new_question[<%=i%>] value=<%=@question.id%> type=hidden />
<% i += 1;
end %>
        <%= hidden_field_tag('assgt_id', @assgt.id) %>
		<%= hidden_field_tag('review_mapping_id', @eligible_review_mapping.id) %>
		<%= hidden_field_tag('user', @user) %>
		<%= hidden_field_tag('review_id', @eligible_review.id) %>
		<%= hidden_field_tag('instructor_review', @instructor_review) %>
  	<%= submit_tag "Create Review of Review", :name=>"save" %>   	
<%= end_form_tag %>
<br />

<%= link_to 'Back', :action => 'list_reviews', :id => @assgt.id %>

